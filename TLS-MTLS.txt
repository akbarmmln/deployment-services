Step 1: Create a Certificate Authority (CA)
1.1 Generate CA Private Key
  openssl genpkey -algorithm RSA -out ca.key -pkeyopt rsa_keygen_bits:2048
1.2 Create a Self-Signed CA Certificate
  openssl req -x509 -new -nodes -key ca.key -sha256 -days 3650 -out ca.crt
  (Common Name (CN): Set as "MyCA" or something similar)

Step 2: Create Server Certificate
2.1 Buat file sans nya
    vi openssl-san.cnf
      [ req ]
      default_bits       = 2048
      prompt             = no
      default_md         = sha256
      distinguished_name = dn
      req_extensions     = req_ext
      
      [ dn ]
      C  = ID
      ST = ID
      L  = ID
      O  = ID
      OU = ID
      CN = istiogcp1-sit.tfal.biz.id
      emailAddress = akbarmmln@gmail.com
      
      [ req_ext ]
      subjectAltName = @alt_names
      
      [ alt_names ]
      DNS.1 = istiogcp1-sit.tfal.biz.id
2.2 Generate Key dan CSR:
  openssl req -new -nodes \
  -out server.csr \
  -keyout server.key \
  -config openssl-san.cnf
  (Common Name (CN): Set this to your domain name (e.g., example.com) or localhost)
2.3 Sign Sertifikat:
  openssl x509 -req \
  -in server.csr \
  -CA ca.crt -CAkey ca.key -CAcreateserial \
  -out server.crt \
  -days 365 \
  -extensions req_ext \
  -extfile openssl-san.cnf

Step 3: Create Client Certificate
3.1 Generate Client Private Key
  openssl genpkey -algorithm RSA -out client.key -pkeyopt rsa_keygen_bits:2048
3.2 Create a Certificate Signing Request (CSR)
  openssl req -new -key client.key -out client.csr
  (Common Name (CN): Use an identifier for the client, e.g., client1)
3.3 Create Client Certificate Signed by CA
  openssl x509 -req -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out client.crt -days 365 -sha256

Step 4: Verify Certificates
4.1 Verify Server Certificate
  openssl verify -CAfile ca.crt server.crt
4.2 Verify Client Certificate
  openssl verify -CAfile ca.crt client.crt
