=> cat /etc/letsencrypt/live/yourdomain.com/fullchain.pem /etc/letsencrypt/live/yourdomain.com/privkey.pem > /etc/haproxy/certs/istio-sit.pem

Final haproxy.cfg

CARA KE SATU
global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11
    tune.ssl.default-dh-param 2048

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option log-health-checks
    option forwardfor
    option http-server-close
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# Frontend block port 80
frontend http_block
    bind *:80
    mode http
    http-request deny

# Frontend untuk HTTPS dengan path-based routing
frontend https_frontend
    bind *:443 ssl crt /etc/haproxy/certs/istio-sit.pem alpn h2,http/1.1

    # ACL untuk Jenkins
    acl is_jenkins hdr(host) -i jenkins.tfal.biz.id
    # Routing Jenkins
    use_backend jenkins_backend if is_jenkins

    # ACL lainnya
    acl is_istio_sit hdr(host) -i newistio-sit.tfal.biz.id

    # Routing berdasarkan path
    acl path_ms_auth path_beg /ms-auth
    acl path_ms_auth path_beg /v2-ms-auth
    use_backend ms_auth_backend if is_istio_sit path_ms_auth

    acl path_ms_account path_beg /ms-account
    acl path_ms_account path_beg /v2-ms-account
    use_backend ms_account_backend if is_istio_sit path_ms_account

    acl path_ms_support path_beg /ms-support
    acl path_ms_support path_beg /v2-ms-support
    use_backend ms_support_backend if is_istio_sit path_ms_support

    acl path_ms_payment path_beg /ms-payment
    acl path_ms_payment path_beg /v2-ms-payment
    use_backend ms_payment_backend if is_istio_sit path_ms_payment

    # Menambahkan header untuk identifikasi load balancer
    http-request set-header X-Forwarded-For %[src]
    http-request set-header X-Forwarded-Proto https
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Forwarded-Port 443

# Backend untuk ms-payment service
backend ms_payment_backend
    mode http
    balance roundrobin
    option httpchk
    http-check connect port 80
    http-check send meth GET uri /ms-payment/healthcheck/healty ver HTTP/1.1 hdr Host newistio-sit.tfal.biz.id

    # Server definitions untuk ms-auth di semua cluster
    server cluster1 istiogcp1-sit.tfal.biz.id:80 check inter 5000 fall 2 rise 2
    server cluster2 istiogcp2-sit.tfal.biz.id:80 check inter 5000 fall 2 rise 2

    # Logging untuk debugging
    option log-health-checks

# Backend untuk ms-support service
backend ms_support_backend
    mode http
    balance roundrobin
    option httpchk
    http-check connect port 80
    http-check send meth GET uri /ms-support/healthcheck/healty ver HTTP/1.1 hdr Host newistio-sit.tfal.biz.id

    # Server definitions untuk ms-auth di semua cluster
    server cluster1 istiogcp1-sit.tfal.biz.id:80 check inter 5000 fall 2 rise 2
    server cluster2 istiogcp2-sit.tfal.biz.id:80 check inter 5000 fall 2 rise 2

    # Logging untuk debugging
    option log-health-checks

# Backend untuk ms-account service
backend ms_account_backend
    mode http
    balance roundrobin
    option httpchk
    http-check connect port 80
    http-check send meth GET uri /ms-account/healthcheck/healty ver HTTP/1.1 hdr Host newistio-sit.tfal.biz.id

    # Server definitions untuk ms-auth di semua cluster
    server cluster1 istiogcp1-sit.tfal.biz.id:80 check inter 5000 fall 2 rise 2
    server cluster2 istiogcp2-sit.tfal.biz.id:80 check inter 5000 fall 2 rise 2

    # Logging untuk debugging
    option log-health-checks

# Backend untuk ms-auth service
backend ms_auth_backend
    mode http
    balance roundrobin
    option httpchk
    http-check connect port 80
    http-check send meth GET uri /ms-auth/healthcheck/healty ver HTTP/1.1 hdr Host newistio-sit.tfal.biz.id

    # Server definitions untuk ms-auth di semua cluster
    server cluster1 istiogcp1-sit.tfal.biz.id:80 check inter 5000 fall 2 rise 2
    server cluster2 istiogcp2-sit.tfal.biz.id:80 check inter 5000 fall 2 rise 2

    # Logging untuk debugging
    option log-health-checks

# Backend untuk jenkins
backend jenkins_backend
    mode http
    balance roundrobin
    option httpchk
    http-check connect port 8080
    http-check send meth GET uri /login ver HTTP/1.1 hdr Host jenkins.tfal.biz.id
    http-check expect status 200

    # Jika Jenkins di server lain, ganti IP-nya
    server jenkins_remote 127.0.0.1:8080 check

    option log-health-checks

# Listen block untuk monitoring
listen stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats show-node
    stats show-legends
    stats auth admin:admin123
    stats admin if TRUE
    
# Listen block untuk health check monitoring (opsional)
listen health_monitor
    bind *:8405
    mode http
    monitor-uri /health
    
    # Return 200 jika HAProxy berjalan dengan baik
    monitor fail if { nbsrv(ms_auth_backend) eq 0 }
    monitor fail if { nbsrv(ms_account_backend) eq 0 }
    monitor fail if { nbsrv(ms_support_backend) eq 0 }
    monitor fail if { nbsrv(ms_payment_backend) eq 0 }


===============================================================================================================================================================================
CARA KEDUA
global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11
    tune.ssl.default-dh-param 2048

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option log-health-checks
    option forwardfor
    option http-server-close
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# Frontend untuk HTTP (redirect ke HTTPS)
frontend http_frontend
    bind *:80
    redirect scheme https code 301 if !{ ssl_fc }

# Frontend untuk HTTPS dengan path-based routing
frontend https_frontend
    bind *:443 ssl crt /etc/haproxy/certs/istio-sit.pem alpn h2,http/1.1
    
    # Menambahkan header untuk identifikasi load balancer
    http-request set-header X-Forwarded-For %[src]
    http-request set-header X-Forwarded-Proto https
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Forwarded-Port 443
    
    # ACL untuk host validation
    acl is_istio_sit hdr(host) -i newistio-sit.tfal.biz.id
    
    # ACL untuk path-based routing
    acl path_ms_auth path_beg /ms-auth
    acl path_ms_account path_beg /ms-account
    
    # Stats page ACL
    acl is_stats path_beg /haproxy-stats
    
    # Routing ms-auth ke dua cluster (50:50)
    use_backend ms_auth_backend_cluster1 if is_istio_sit path_ms_auth { rand(100) lt 50 }
    use_backend ms_auth_backend_cluster2 if is_istio_sit path_ms_auth

    # Routing ms-account ke dua cluster (50:50)
    use_backend ms_account_backend_cluster1 if is_istio_sit path_ms_account { rand(100) lt 50 }
    use_backend ms_account_backend_cluster2 if is_istio_sit path_ms_account

    use_backend stats if is_stats
    
# Backend untuk ms-auth service
backend ms_auth_backend_cluster1
    http-request set-header Host istiogcp1-sit.tfal.biz.id
    server s1 istiogcp1-sit.tfal.biz.id:443 ssl sni str(istiogcp1-sit.tfal.biz.id) verify none alpn h2,http/1.1 ssl-min-ver TLSv1.2
backend ms_auth_backend_cluster2
    http-request set-header Host istiogcp1-sit.tfal.biz.id
    server s2 istiogcp1-sit.tfal.biz.id:443 ssl sni str(istiogcp1-sit.tfal.biz.id) verify none alpn h2,http/1.1 ssl-min-ver TLSv1.2

# Backend untuk ms-account service
backend ms_account_backend_cluster1
    http-request set-header Host istiogcp1-sit.tfal.biz.id
    server s1 istiogcp1-sit.tfal.biz.id:443 ssl sni str(istiogcp1-sit.tfal.biz.id) verify none alpn h2,http/1.1 ssl-min-ver TLSv1.2

backend ms_account_backend_cluster2
    http-request set-header Host istiogcp1-sit.tfal.biz.id
    server s2 istiogcp1-sit.tfal.biz.id:443 ssl sni str(istiogcp1-sit.tfal.biz.id) verify none alpn h2,http/1.1 ssl-min-ver TLSv1.2

# Backend untuk statistics
backend stats
    stats enable
    stats uri /haproxy-stats
    stats realm HAProxy\ Statistics
    stats auth admin:admin123
    stats refresh 30s
    stats show-node
    stats show-legends

# Listen block untuk monitoring
listen stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if TRUE
    
# Listen block untuk health check monitoring (opsional)
listen health_monitor
    bind *:8405
    mode http
    monitor-uri /health
    
    # Return 200 jika HAProxy berjalan dengan baik
    monitor fail if { nbsrv(ms_auth_backend_cluster1) eq 0 }
    monitor fail if { nbsrv(ms_auth_backend_cluster2) eq 0 }
    monitor fail if { nbsrv(ms_account_backend_cluster1) eq 0 }
    monitor fail if { nbsrv(ms_account_backend_cluster2) eq 0 }
