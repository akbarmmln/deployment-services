--install diluar cluster kubernetes
wget -O - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(grep -oP '(?<=UBUNTU_CODENAME=).*' /etc/os-release || lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
sudo apt update && sudo apt install vault
--setelah itu
helm install vault-injector hashicorp/vault \
  --namespace vault \
  --set server.enabled=false \
  --set injector.enabled=true \
  --set injector.externalVaultAddr=<ip-public-vault>:8200

vault auth enable kubernetes
vault write auth/kubernetes/config \
  token_reviewer_jwt="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
  kubernetes_host="https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT" \
  kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt

vault secrets enable -path=DARU kv-v2
vault kv put DARU/SIT/msaccount DB_USER="admin" DB_PASS="s3cret"

# superadmin.hcl
path "*" {
  capabilities = ["create", "read", "update", "delete", "list", "sudo"]
}
# daru-sit-policy.hcl
path "DARU/data/*" {
  capabilities = ["create", "read", "update", "delete", "list"]
}
path "DARU/metadata/*" {
  capabilities = ["read", "list"]
}
vault policy write daru-sit-policy ./daru-sit-policy.hcl
vault policy write superadmin ./superadmin.hcl

vault write auth/kubernetes/role/daru-sit \
  bound_service_account_names=vault-auth \
  bound_service_account_namespaces=sit \
  policies=daru-sit-policy \
  ttl=24h

vault auth enable userpass
vault write auth/userpass/users/root \
  password="root" \
  policies="superadmin"
vault write auth/userpass/users/devops \
  password="devops" \
  policies="daru-sit-policy"

vault operator init
vault operator unseal <key1-5>

-> for uninstall -- helm uninstall vault -n vault

-> vault-auth-service-account.yaml
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: vault-auth
      namespace: sit
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: role-tokenreview-binding
      namespace: sit
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:auth-delegator
    subjects:
    - kind: ServiceAccount
      name: vault-auth
      namespace: sit

-> vault-auth-secret.yaml
    apiVersion: v1
    kind: Secret
    metadata:
      name: vault-auth-secret
      namespace: sit
      annotations:
        kubernetes.io/service-account.name: vault-auth
    type: kubernetes.io/service-account-token
